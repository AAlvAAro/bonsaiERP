- present transaction, TransactionPresenter do |presenter|
  = simple_form_for(transaction, :html => {:id => 'transaction_form', :class => 'enter ui-form'}) do |f|
    = bonsai_form_error(f)

    %input#transaction-type(type='hidden' value="#{transaction.type}")

    .row-fluid
      .span4
        = f.input :ref_number, :label => 'Nº de referencia', :input_html => {:size => 20}
      .span4
        = f.input :date, :label => "Fecha", as: :datepicker
      .span4
        = f.input :contact, as: :autocomplete, label: 'Contacto', input_html: { 'data-source' => '/contacts' }

    %hr.light
    .row-fluid.currency-input
      .span4
        = f.association :currency, :label => 'Moneda', :include_blank => false,
          :input_html => {:id => 'transaction_currency_id', data: {value: 'currency.currency_id'} }

        = f.input :exchange_rate, label: "Tipo de cambio de <span class='currency'></span> a #{currency_code_label}".html_safe,
          input_html: {id: 'transaction_exchange_rate', type: 'decimal', size: 6, data: {value: 'currency.rate'}},
          wrapper_class: 'exchange-rate control-group'
          
      .span4
        = f.association :project,  :label => 'Proyecto',
          :input_html => {'data-new_url' => new_project_path, 'data-title' => "Nuevo proyecto", 'data-trigger' => 'new_project', 'data-width' => "900" }
      .span4
        = f.input :bill_number, :label => 'Nº de Documento'.html_safe, :input_html => {:size => 20}


    %hr.light
    .row-fluid
      .span6
        = f.input :description, :label => 'Descripción', :as => :text, :input_html => {:rows => 3, :cols => 40}
  
    -# Render items
    =render "transactions/form_items", :f => f, :transaction => transaction

    = f.submit 'Salvar', :class => 'btn btn-success b btn-large'

  -# Currency Form
  #currency_form.ajax-modal{ :style => 'display:none;'}
    %h4.red Advertencia! Verifique los precios de los items, serán modificados

    %label Tipo de cambio
    %span.currency_symbol.b
    1
    \= 
    %span.default_symbol.b
    %input{:type => 'text', :size => 8, :class => 'r', :id => 'exchange_rate', :value => transaction.exchange_rate}
    %button#exchange_rate_button.button Cambiar


-#= render 'transactions/item'
:coffeescript
  (($) ->
    fx.rates = exchangeRates.rates
    currency = new App.TransactionCurrency()
    rivets.bind($('.currency-input'), {currency: currency})

    income = new App.Income(currency)
    income.setList()

  )(jQuery)

- content_for :links do
  %ul.breadcrumps
    %li #{link_to "Ventas", incomes_path}<span>&gt;</span>

  .links
    - if @income.draft?
      = link_to 'Editar', edit_income_path(@income), :class => 'edit'
    = link_to 'Nueva', new_income_path, :class => 'add'
.clear


%h1.mb5{:style => 'display:inline-block;'} #{note_title(@income)} de venta #{@income.ref_number}
%span.b#income_state{:class => @income.real_state, :style => 'font-size:1.3em'}= @income.show_state

._50.fr
  = link_to "Email","", :class => 'email'
  &nbsp;&nbsp;
  = link_to "Imprimir","", :class => 'print'

._50.fl.r
  / FORM to null income
  - if @income.draft?
    = simple_form_for @income, :url => aprove_income_path(@income) do |f|
      .submit
        =f.submit "Aprobar", :class => 'dark_green', :id => 'income_aprove_button'
  - elsif not @income.paid?
    = simple_form_for @income, :url => null_income_path(@income) do |f|
      .submit
        =f.submit "Anular", :class => 'red', :id => 'income_null_button'

.clear
#tabs
  %ul
    %li <a href="#information">Información</a>
    %li <a href="#income_payments">Cobros</a>
    %li <a href="#income_pay_plans">Crédito</a>

  #information

    .main{:style => 'font-size:1.2em;'}
      %span.dark.b.i= lo @income.date
      = link_to @income.contact, "#", :title => "Historial cliente"

    .input
      .input
        - unless @income.currency_id == currency_id
          1 #{@income.currency.name} = <span class="b">#{@income.currency_exchange_rate}</span> #{currency_name.pluralize}
        - else
          = @income.currency.name
        - if @income.project_id
      .input
        %span.dark_grey 
          -if @income.project_id
            Proyecto #{link_to @income.project.to_s, @income.project, :title => 'Proyecto'}
    .input= @income.description unless @income.description.blank?


    .clear

    = render 'items', :income => @income

  #income_payments
    =render "/payments/payments", :transaction => @income if @income.show_payments?
    .clear

  #income_pay_plans
    =render "/pay_plans/pay_plans", :transaction => @income if @income.show_pay_plans?

:javascript
  $(function () {
    $('#tabs').tabs();

    $('#pay_plan_anchor').click(function() { $('#pay_plans').mark(); });
    $('#payment_anchor').click(function() { $('#payments').mark(); });

    if(!#{@income.paid?} && #{@income.cash}) {
      $('#new_payment_link').trigger('click');
    }

    /**
    * Sets the state for Income
    * @param String state
    */
    function setIncomeState(state) {
      if(state == 'paid') {
        $('#payment_anchor').html('Ver cobros');
        $('#pay_plan_anchor').html('Ver crédito');
        $('#income_state').html('Pagado').attr('class', '').addClass('b paid');
      }else{
        if(state == 'due') {
          $('#income_state').attr("class", '').addClass("b " + state).html("Vencido");
        }else{
          $('#income_state').attr("class", '').addClass("b " + state).html("Aprobado");
        }
        $('#payment_anchor').html('Realizar cobros');
        $('#pay_plan_anchor').html('Planificar crédito');
      }
    }


    // Only when in edition
    if("#{@income.state}" == "draft") {
      // Deleted data
      $('body').live("del-pay_plan", function(resp) {
        try{
          if(resp.transaction_cash == true) {
            $('#cash_credit_title').html('Crédito');
          }else if(resp.transaction_cash == false){
            $('#cash_credit_title').html('Contado');
          }
        } catch(e) {}
      }).live('transaction', function(e, resp) {
        if(resp.transaction_cash) {
          $('#cash_credit_title').html("Contado");
        }else{
          $('#cash_credit_title').html("Crédito");
        }
      });
    }else {
      // When it has been aproved
      $('body').live('payments',function(e, resp) {
        // Calculates the total for AJAX events
        $('#items_table #total_payments').html("-" + _b.ntc(resp.amount));
        $('#items_table #balance').html(_b.ntc(resp.transaction_balance) );
      }).live('transaction', function(e, resp) {
        setIncomeState(resp.transaction_real_state);
      }).live('del-pay_plan', function(e, resp) {
        setIncomeState(resp.transaction_real_state);
      });
    }
  });

- @accounts = Account.org
- if @accounts.any?
  = simple_form_for(@payment) do |f|
    = bonsai_form_error(f)
    = hidden_field_tag "payment_type", params[:payment_type]

    = f.input :transaction_id, :as => :hidden

    = f.input :date, :label => 'Fecha'
    = f.association :account, :label => 'Cuenta <span class="n black" id="cur"></span>'.html_safe, :collection => @accounts
    .clear

    = f.input :amount, :input_html => {:size => 12, :type => 'decimal', :disabled => @payment.transaction_cash}, :label => currency_label('Cantidad', @payment)
    = f.input :interests_penalties, :input_html => {:size => 12, :type => 'decimal'}, :label => currency_label('Intereses/Penalidades', @payment)
    .clear

      = f.input :reference, :label => 'Referencia/Nº Cheque', :input_html => {:size => 20}
      .input.exchange_rate{:style => 'display: none'}
        = f.label :exchange_rate, "Tipo de cambio"
        1 #{@payment.transaction.currency_name} = 
        = f.text_field :exchange_rate, :size => 6, :class => 'r'
        %span#exchange_rate_cur
        - if f.object.errors[:exchange_rate].present?
          %span.error= f.object.errors
    /= f.input :description, :label => 'Descripción', :as => :text, :input_html => {:rows => 4, :cols => 35}
    .clear

    .actions
      = f.submit 'Salvar'

  :javascript
    $(function() {

      function Payment(currency_id, accounts, rates) {
        this.currency_id = currency_id;
        this.accounts = accounts;
        this.currencies = currencies;
        this.setEvents();
      };

      Payment.prototype = {
        currency_id: null,
        accounts: null,
        currencies: null,
        setEvents: function() {
          this.accountIdEvent();
          this.currencyRateEvent();
        },
        /**
        * Sets the account_id Event
        */
        accountIdEvent: function() {
          var self = this;

          $('#payment_account_id').die().live('change keyup', function() {
            var html = '';
            var rate = 1;
            try{
              var currency_id = self.accounts[ $(this).val() ].currency_id;

              if( self.currency_id != currency_id ) {
                var name = self.currencies[currency_id].name.pluralize();

                $('.exchange_rate').show('slow').mark();
                $('#exchange_rate_cur').html(name);
              }else{
                $('.exchange_rate').hide('slow');
              }
            }catch(e) {}

            $('#payment_exchange_rate').val(rate);            
            $('#cur').html(html).mark();

          });
        },
        /**
        * @param String
        */
        createAmountInterestLabel: function(currency_id) {
          var cur = "#{currency_complete_plural}";
          if(this.currencies[currency_id]) {
            var ra = this.currencies[currency_id];
            cur = ra.currency_symbol + " " + ra.currency_name.pluralize();
          }

          $('label[for=payment_amount]').html("Cantidad (" + cur + ")");
          $('label[for=payment_interests_penalties]').html("Intereses/Penalidades (" + cur + ")");
        },
        /**
        * Sets the edit rate link
        */
        currencyRateEvent: function() {
          var self = this;

          $('#cur_link').die().live("click", function() {
            var rate = prompt("Tipo de cambio", $('#payment_exchange_rate').val() ) * 1;

            if( rate > 0 ) {
              $('#payment_exchange_rate').val(rate);
              var currency_id = self.accounts[ $('#payment_account_id').val() ].currency_id;
              $('#cur').html(self.createAccountIdLabel(currency_id, rate) ).mark();
            }
          });
        },
        /**
        * Creates the HTML for account_id
        * @param String account_id
        */
        createAccountIdLabel: function(currency_id, rate, join) {
          rate = "<strong>" + _b.ntc(rate) + "</strong>";
          join = join || true;

          var link = '<a href="javascript:" id="cur_link">editar</a>';
          var html = ["1", this.currencies[currency_id].currency_name, 
          "=", rate, "#{currency_plural}", link ];

          if(join) {
            html = html.join(" ");
          }

          return html;
        }
      };

      var accounts = #{Account.json.to_json};
      var currencies = #{Currency.json.to_json};

      var payment = new Payment(#{@payment.transaction.currency_id}, accounts, currencies);
    });

-else
  %h3 
    Debe crear una 
    =link_to "caja", new_cash_register_path(:currency_id => @payment.currency_id), :target => '_blank'
    o 
    =link_to "banco", new_bank_path(:currency_id => @payment.currency_id), :target => '_blank'
    con moneda #{@payment.currency}

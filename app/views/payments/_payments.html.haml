#payments
  %h2.dark #{pay_type.pluralize.titleize} realizados

  = link_to "Nuevo #{pay_type}", new_payment_path(:type => klass.type.to_s, :id => klass.id, :payment_type => pay_type), :class => 'new ajax', :title => "Nuevo #{pay_type}", 'data-width' => "700", 'data-trigger' => 'payment' unless klass.paid?

  %table.decorated.nwl#payments_table
    %thead
      %tr
        %th Fecha
        %th Descripci√≥n
        %th Cuenta
        %th Cantidad
        %th Intereses<br/>Penalidades
        %th Total fila
        %th
    
    %tbody
      - klass.payments.each do |payment|
        %tr{ :id => payment.id, :class => payment.active }
          %td= lo payment.date
          %td= payment.description
          %td= payment.account
          %td.r= ntc payment.amount
          %td.r= ntc payment.interests_penalties
          %td.r= ntc payment.total_amount
          %td.actions= link_to "Anular #{pay_type}", payment, 'data-method' => 'put', :class => 'null null_payment'

    %tr.extra.pad_top
      %td{:colspan => 2} 
      %td.r.b{:colspan => 2} Total #{pay_type.pluralize} + Intereses/Penalidades
      %td.r.b= ntc klass.total_payments_with_interests

:javascript
  $(function() {
    var template = [
      '<tr id="${id}" class="${active}">',
          '<td>${date}</td>',
          '<td>${description}</td>',
          '<td>${account}</td>',
          '<td class="r">${_b.ntc(amount)}</td>',
          '<td class="r">${_b.ntc(interests_penalties)}</td>',
          '<td class="r">${_b.ntc(total_amount)}</td>',
          '<td class="actions">',
          '<a data-method="put" class="null null_payment" href="/payments/6">Anular cobro</a></td>',
        '</tr>'
    ].join("");
    
    /**
    * Nulls a payments
    */
    $('a.null_payment').live("click", function() {
      $(this).parents('tr').addClass('marked');
      if(confirm("Esta seguro de anular el #{pay_type} seleccionado?")) {
        $(this).parents('tr').removeClass('marked');
        return false;
      }else{
        $(this).parents('tr').removeClass('marked');
        return false;
      }
    });
    

    /**
     * Creates a note to notify pay_plans
     */
    Payment = {
      message: [],
      /**
      * Main function after reciving the AJAX response from payments controller
      */
      create: function(resp) {
        $('#payments_table').updateTemplateRow(template, resp);
        this.triggerPayPlan(resp.pay_plan);
        this.updatePayPlans(resp.updated_pay_plan_ids);
        this.creataMessage(resp);
      },
      /**
      * Triggers event to add a new pay_plan in case there is a new one
      */
      triggerPayPlan: function(pay_plan) {
        if(pay_plan) {
          $('body').trigger('pay_plan', [resp.pay_plan]);
        }
      },
      /**
      * Creates a message about the payment
      */
      createMessage: function(resp) {
        this.message = [];
        this.payPlansMessage(resp.updated_pay_plan_ids);
        this.newPayPlanMessage(resp.pay_plan);
        if(this.message.length > 0)
          $('#payments h2').after('<div class="message">' + this.message.join("<br/>") + '</div>');
      },
      /**
      * Message for pay_plans
      */
      payPlansMessage: function(ids) {
        if(ids > 1) {
          this.message.push("Se ha anulado los planes de pago " + ids.join(", ") );
        }else if(ids == 1) {
          this.message.push("Se ha anulado 1 plan de pago");
        }
      },
      /**
      * Creates a pay_plan message if one was created
      */
      newPayPlanMessage: function(pay_plan) {
        if(pay_plan) {
          this.message = "Se ha creado un nuevo <a href='javascript:' class='pay_plan' data-id='" + pay_plan.id + "'>plan de pago</a>";
        }
      },
      /**
      * Hides the payPlans links for edit and destroy that payment changed state and setsa new state
      * @param Array ids
      */
      updatePayPlans: function(ids) {
        $(ids).each(function(i, el) {
          $tr = $('#pay_plans_table').find("tr#" + el)
          $tr.find("a.edit, a.delete, a.email").hide();
          $tr.find('td.state').html('Pagado').removeClass("red").addClass("dark_green");
        });
      }
    }
    

    /**
    * Method of payment
    */
    $('body').live('payment', function(e, resp) {
      Payment.create(resp);
    });
  })

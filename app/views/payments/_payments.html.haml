#payments
  %h2.dark #{pay_type.pluralize.titleize} realizados

  = link_to "Nuevo #{pay_type}", new_payment_path(:type => klass.type.to_s, :id => klass.id, :payment_type => pay_type), :class => 'new ajax', :title => "Nuevo #{pay_type}", 'data-width' => "700", 'data-trigger' => 'payment' unless klass.paid?

  %table.decorated.nwl#payments_table
    %thead
      %tr
        %th Fecha
        %th Descripci√≥n
        %th Cuenta
        %th Cantidad
        %th Intereses<br/>Penalidades
        %th Total fila
        %th
    
    %tbody
      - klass.payments.each do |payment|
        %tr.payment{ :id => payment.id, :class => payment.active }
          %td= lo payment.date
          %td= payment.description
          %td= payment.account
          %td.r.amount{'data-val' => payment.amount}= ntc payment.amount
          %td.r.interests_penalties{'data-val' => payment.interests_penalties}= ntc payment.interests_penalties
          %td.r.total_amount{'data-val' => payment.total_amount}= ntc payment.total_amount
          %td.actions= link_to "Anular #{pay_type}", payment, 'data-method' => 'put', :class => 'null null_payment'

    %tr.extra.pad_top
      %td{:colspan => 2} 
      %td.r.b{:colspan => 2} Total #{pay_type.pluralize} + Intereses/Penalidades
      %td.r.b#total_payment= ntc klass.total_payments_with_interests

:javascript
  $(function() {
    var template = [
      '<tr id="${id}" class="${active} payment">',
          '<td>${date}</td>',
          '<td>${description}</td>',
          '<td>${account}</td>',
          '<td class="r amount" data-val="${amount}">${_b.ntc(amount)}</td>',
          '<td class="r interests_penalties" data-val="${interests_penalties}">${_b.ntc(interests_penalties)}</td>',
          '<td class="r total_amount" data-val="${total_amount}">${_b.ntc(total_amount)}</td>',
          '<td class="actions">',
          '<a data-method="put" class="null null_payment" href="/payments/6">Anular cobro</a></td>',
        '</tr>'
    ].join("");
    
    /**
    * Nulls a payments
    */
    $('a.null_payment').live("click", function() {
      $(this).parents('tr').addClass('marked');
      if(confirm("Esta seguro de anular el #{pay_type} seleccionado?")) {
        $(this).parents('tr').removeClass('marked');
        return false;
      }else{
        $(this).parents('tr').removeClass('marked');
        return false;
      }
    });
    

    /**
     * Creates a note to notify pay_plans
     */
    Payment = {
      messages: [],
      /**
      * Main function after reciving the AJAX response from payments controller
      */
      create: function(resp) {
        var self = this;
        this.insertRow(resp);
        this.triggerPayPlan(resp.pay_plan);
        this.updatePayPlans(resp.updated_pay_plan_ids);
        this.createMessage(resp);
        setTimeout(function() { self.calculateTotal() }, 200);
      },
      /**
       * Inserts a new row for payments dependig in the row
      */
      insertRow: function(resp) {
        if($('#payments_table tr.payment').length > 0) {
          $('#payments_table tr.payment:last').updateTemplateRow(template, resp);
        }else{
          $('#payments_table tr:first').updateTemplateRow(template, resp);
        }
      },
      /**
      * Triggers event to add a new pay_plan in case there is a new one
      */
      triggerPayPlan: function(pay_plan) {
        if(pay_plan) {
          $('body').trigger('pay_plan', [pay_plan]);
        }
      },
      /**
      * Creates a message about the payment
      */
      createMessage: function(resp) {
        this.messages = [];
        this.payPlansMessage(resp.updated_pay_plan_ids);
        this.newPayPlanMessage(resp.pay_plan);
        $('#payment_message').remove();
        if(this.messages.length > 0)
          $('#payments h2').after('<div class="message" id="payment_message"><p>' + this.messages.join("</p><p>") + '</p></div>');
      },
      /**
      * Message for pay_plans
      */
      payPlansMessage: function(ids) {
        if(ids.length > 1) {
          this.messages.push("Se ha anulado los planes de pago " + this.createPayPlanLinks(ids) );
        }else if(ids.length == 1) {
          this.messages.push("Se ha anulado 1 plan de pago " + this.createPayPlanLinks(ids) );
        }
      },
      /**
      * Crete a links for the pay_plans
      */
      createPayPlanLinks: function(ids) {
        var html = [];
        $(ids).map(function(i, el) { 
          html.push('<a href="#pay_plans_table" data-id="' + el + '" class="pay_plan_link">' + el + '</a>');
        });
        return html.join(", ");
      },
      /**
      * Creates a pay_plan message if one was created
      */
      newPayPlanMessage: function(pay_plan) {
        if(pay_plan) {
          this.messages.push( "Se ha creado un nuevo <a href='#pay_plans_table' class='pay_plan_link' data-id='" + pay_plan.id + "'>plan de pago</a>");
        }
      },
      /**
      * Hides the payPlans links for edit and destroy that payment changed state and setsa new state
      * @param Array ids
      */
      updatePayPlans: function(ids) {
        $(ids).each(function(i, el) {
          $tr = $('#pay_plans_table').find("tr#" + el)
          $tr.find("a.edit, a.delete, a.email").hide();
          $tr.find('td.state').html('Pagado').removeClass("red").addClass("dark_green");
        });
      },
      /**
      * Calculates the total amount and triggers an event to update the balance in other sheets
      */
      calculateTotal: function() {
        var amount = 0, total_amount = 0, interests_penalties = 0;
        $('#payments_table tr.payment').each(function(i, el) {
          amount += $(el).find('td.amount').data('val');
          total_amount += $(el).find('td.total_amount').data('val');
          interests_penalties += $(el).find('td.interests_penalties').data('val');
        });
        $('#payments_table #total_payment').html(_b.ntc(total_amount));
        $('body').trigger('payments', [{'amount': amount, 'total_amount': total_amount, 'interests_penalties': interests_penalties}]);
      }
    };

    /* Test data for pay_plan_class
    var test_pay_plan = {"alert_date":"2011-02-08","amount":"165.0","created_at":"2011-02-08T12:58:10Z","ctype":"Income","currency_id":1,"description":null,"email":null,"id":41,"interests_penalties":"0.0","organisation_id":1,"paid":false,"payment_date":"2011-02-08","transaction_id":6,"updated_at":"2011-02-08T12:58:10Z", new_record: true};
    var test = {"account_id":1,"active":true,"amount":"50.0","created_at":"2011-02-08T12:51:27Z","ctype":null,"currency_id":1,"date":"2011-02-08","description":null,"id":11,"interests_penalties":"0.0","organisation_id":1,"transaction_id":3,"updated_at":"2011-02-08T12:51:27Z","updated_pay_plan_ids":[37, 38],"pay_plan":test_pay_plan,"account":"Banco Nacional de Bolivia 5464654654","total_amount":"50.0", new_record: true};
    */

    window.Payment = Payment;

    /**
    * Method of payment
    */
    $('body').live('payment', function(e, resp) {
      Payment.create(resp);
    });

  })

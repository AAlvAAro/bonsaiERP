= simple_form_for @pay_plan do |f|
  = hidden_field_tag "pay_type", params[:pay_type]
  = f.input :ctype, :as => :hidden
  = f.input :transaction_id, :as => :hidden
  
  = f.input :payment_date, :label => "Fecha de #{@pay_plan.pay_type}"
  = f.input :alert_date, :label => 'Fecha de advertencia'
  .clear

  = f.input :amount, :label => currency_label('Cantidad', @pay_plan), :input_html => {:size => 12, :type => 'decimal'}
  = f.input :interests_penalties, :label => currency_label('Intereses/Penalidades', @pay_plan), :input_html => {:size => 12, :type => 'decimal'}
  .clear

  - if @pay_plan.transaction.income?
    = f.input :email, :label => 'Enviar email de alerta', :hint => 'Envía un <strong>email automaticamente</strong> en la fecha de advertencia'.html_safe
  =f.input :repeat, :as => :radio, :label => 'Repetir patrón', :hint => 'Repite la cantidad hasta completar el saldo automaticamente'
  = f.input :description, :as => :text, :input_html => {:rows => 4, :cols => 35 }
  .clear
  .submit
    = f.submit "Salvar"
:javascript
  $(function() {
    /**
    * Sets the alert days before the date
    * @param Date date
    */
    setAlertDate = function(date) {
      days = 5;// Has to be defined in conf in the future
      var before = new Date( date.getTime() - 1000 * 3600 * 24 * days );
      date = $.datepicker.formatDate($.datepicker._defaults.dateFormat, before);
      $('#pay_plan_alert_date_1i').siblings('input.hasDatepicker').datepicker("setDate", date).trigger("change");
    }

    // Die all events
    $('#pay_plan_payment_date_1i').die();
    // Set event
    $('#pay_plan_payment_date_1i').live("change", function() {
      var date = $(this).siblings('input.hasDatepicker').datepicker("getDate");
      setAlertDate( date );
    });
  });

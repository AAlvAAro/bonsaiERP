:css
  #items_table .input{
    margin: 2px 0px;
  }
  input.hide{ display: none; }


= simple_form_for(transaction, :html => {:id => 'transaction_form'}) do |f|
  = bonsai_form_error(f)
  .main.bg_light_grey
    .input
      = f.input :ref_number, :label => 'Nº de referencia', :input_html => {:size => 20}
      .input
        %label Fecha Hora
        %p= lo Time.now

    = f.input :contact_id, :as => :contact, :label => false, :input_html => {:id => 'transaction_contact_id'}
    .clear

  .clear

  = f.association :project,  :label => 'Proyecto', :collection => Project.org,
    :input_html => {'data-new_url' => new_project_path, 'data-title' => "Nuevo proyecto", 'data-trigger' => 'new_project' }

  = f.association :currency, :label => 'Moneda/Tipo de cambio. <span class="n black"></span>'.html_safe, :include_blank => false
  = f.input :exchange_rate, :as => :hidden
  .clear

  /.input
  = f.input :bill_number, :label => 'Nº de Factura o Recibo', :input_html => {:size => 20}
  - if transaction.income?
    =f.association :taxes, :as => :check_boxes, :label => 'Impuestos', :wrapper_html => {:id => 'taxes'}, :collection => Tax.org,
      :label_method => lambda{|tax| "<span id='span#{tax.id}' data-rate='#{tax.rate}' title ='#{tax.name}'>#{tax.abbreviation} (#{ntc tax.rate}%)</span>".html_safe }

  .clear

  = f.input :description, :label => 'Descripción', :as => :text, :input_html => {:rows => 3, :cols => 40}
  .clear

  %h2.dark#items_header Items

  %table#items_table.decorated
    %thead
      %tr
        %th.item Item
        /%th.description Descripción
        %th.price Precio <br/>unitario #{currency_symbol}
        %th.quantity Cantidad
        %th.total_row Total fila
        %th

    - @items = transaction.get_items

    = f.simple_fields_for :transaction_details do |fd|
      %tr.item
        %td.cur
          = fd.input :item_id, :label => false, :collection => @items, :input_html => {:class => 'item'}
        /%td= fd.input :description, :label => false, :input_html => {:size => 20}

        %td= fd.input :price, :input_html => { :size => 8, :class => 'price', :type => 'decimal' }, :label => false
        %td= fd.input :quantity, :input_html => { :size => 8, :class => 'quantity', :type => 'decimal' }, :label => false

        %td.total_row.r{'data-val' => fd.object.total }= ntc fd.object.total
        %td.del <a href="javascript:" class="destroy" title="Borrar">&nbsp;</a>
    
    %tr.extra.pad_top
      %td
      %td.cur{:colspan => 2} Subtotal
      %td#subtotal.r{'data-val' => transaction.subtotal}= ntc(transaction.subtotal)
    
    %tr.extra
      %td <a href="javascript:" id="add_item" class="add">Adicionar ítem</a>
      %td.cur.discount{:colspan => 2} 
        - if transaction.is_a? Income
          = f.input :discount, 
            :label => "#{minus_image} Descuento general (<span id=\"discount_percentage\" data-val=\"#{transaction.discount}\">#{ntc transaction.discount}</span>%)".html_safe, 
            :input_html => {:size => 4, :type => 'decimal'}, :wrapper_html => {:class => 'boolean _100'}
            
        /#{minus_image} Descuento (<span id="discount_percentage" data-val="#{transaction.discount}">#{ntc transaction.discount}</span>%)
      %td#discount_total.r{'data-val' => transaction.total_discount} #{ntc(transaction.total_discount)}
    
    %tr.extra
      %td
      %td.cur.line{:colspan => 2} Impuestos (<span id="taxes_percentage" data-val="#{transaction.tax_percent}">#{ntc transaction.tax_percent}</span>%)
      %td#taxes_total.r.line{'data-val' => transaction.total_taxes}= ntc transaction.total_taxes
    
    %tr.extra
      %td
      %td.r.b.dark{:colspan => 2} Total
      %td#total_value.b.cur{ 'data-val'=>transaction.total} #{currency_symbol} #{ntc transaction.total}

    %tr.extra
      %td
      %td.r.b.dark#currency_symbol{:colspan => 2}= "Total #{transaction.currency_name.pluralize}" if transaction.currency_id.present?
      %td.cur.b#total_value_currency= "#{transaction.try(:currency_symbol)} #{ntc transaction.total_currency}" if transaction.currency_id.present?

  .actions
    = f.submit 'Salvar'
:javascript
  $( function() {
    // Autocomplete
    $('#transaction_contact_id').contactAutocomplete(#{get_contact_list.to_json}, {'id': 'contact_autocomplete'});

    $('a#add_item').click(function() {
      $('#item_autocomplete').hide().insertAfter('#items_table');
    });
  
    var items = #{ @items.json.to_json };
    var type = "#{transaction.type.downcase}";

    var currencies = #{ Currency.select("id, name, symbol").to_json };
    var exchange_rates = #{ CurrencyRate.active.select("rate, currency_id").to_json };

    var default_currency_id = #{currency_id};
    var transaction = new #{transaction.type}(items, "#transaction_form", {'default_currency_id': default_currency_id }, currencies, exchange_rates );
    window.transaction = transaction;

    // Functions for the select boxes
    $('body').live('new_project', function(e, resp) {
      $('#' + type + '_project_id').createSelectOption(resp.id, resp.name);
    });

    // New item triger
    $('#items_table a.add').live('click', function() {
      $('#items_table').data('row', $(this).parents('tr:first').get(0).rowIndex );
    });

    // new_item trigger
    $('body').live('new_item', function(e, resp) {
      $('#items_table select').each(function(i, el) {
        $(el).append([ '<option value="', resp.id ,'">', resp.code, ' - ', resp.name , '</option>' ].join("") );
      });
      transaction.items.push(resp);
      var rowIndex = $('#items_table').data('row');

      // IE7 hack
      setTimeout(function() { 
        $('#items_table tr:eq(' + rowIndex + ')').find('select').val(resp.id).trigger('change').mark(); 
      }, 100);
    });

  });

= Bonsai

Bonsai is a financiery system that provides a simple solution to the comon needs
to control an organisation finances. Beatiful, simple


PostgreSQL
sudo -u postgres psql template1

CREATE USER demo WITH CREATEDB PASSWORD 'demo123';

git in server: demo4321

cylobo75

GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, FILE, INDEX, ALTER, CREATE TEMPORARY TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER ON *.* TO 'demo'@'localhost';


taps server mysql://demo:demo123@localhost/bonsai_dev?encoding=utf8 demo demo123
taps pull postgres://demo:demo123@localhost/bonsai_dev http://demo:demo123@localhost:5000

:javascript
  $(function() {
    var template = [
      '<tr id="${id}" class="p_${state} payment">',
          '<td><a href="/payments/${id}" class="b">${date}</a></td>',
          '<td class="account">${account}</td>',
          '<td class="r amount" data-val="${amount}">#{transaction.currency_symbol} ${_b.ntc(amount)}</td>',
          '<td class="r interests_penalties" data-val="${interests_penalties}">${currency_symbol} ${_b.ntc(interests_penalties)}</td>',
          '<td class="r total_amount" data-val="${total_amount}">#{transaction.currency_symbol} ${_b.ntc(amount)}</td>',
          '<td class="actions">',
          '${checkIfConciliation(state, account_ledger_id)}',
          '{{if(state == "conciliation")}}<a class="conciliate" href="/account_ledgers/${account_ledger_id}/conciliate" title="Conciliar con cuenta bancaria">Conciliar banco</a>{{/if}}</td>',
        '</tr>'
    ].join("");
    
    /**
    * Deletes a payment
    */
    $('#payments_table a.destroy').live("click", function() {
    });

    function checkIfConciliation(state, account_ledger_id, id) {
      var arr = [];
      
      if(state == "conciliation") {
        arr = ['<a class="conciliate" href="/account_ledgers/', account_ledger_id, 
        '/conciliate" title="Conciliar con cuenta bancaria">Conciliar banco</a>'];
      }
      
      arr.push('<a href="' + account_ledger_id + '">borrar');
      

      return arr.join("");
    }
    
    /**
     * Creates a note to notify pay_plans
     * triggers ['payments', 'pay_plan']
    **/
    Payment = {
      messages: [],
      /**
      * Main function after reciving the AJAX response from payments controller
      */
      create: function(resp) {
        var self = this;
        this.insertRow(resp);
        this.triggerPayPlan(resp.pay_plan);
        this.updatePayPlans(resp.updated_pay_plan_ids);
        this.createMessage(resp);

        setTimeout(function() { 
          $('body').trigger('transaction', [resp]);
          //////////////Error
          var r = self.calculateTotal(resp);
          self.triggerPayments(r);
        }, 200);
        //$('body').trigger('transaction', [resp]);
      },
      /**
      * nulls a payments
      * @param Dom link
      */
      nullPayment: function(link) {
        var self = this;
        $(link).css('visivility', 'hidden');

        $.ajax({
          'url': $(link).attr("href"),
          'data': {'authenticity_token': csrf_token },
          'type': 'put',

          'success':function(resp) {
            $(link).parents('tr:first').removeClass('true').addClass('false').mark();
            $(link).parents('td:first').html('Anulado');
            self.triggerNullPayment(resp);
          }
        });
      },
      /**
      * triggers the null_payment event and sets inactive a row
      */
      triggerNullPayment: function(resp) {
        $('#payments tr#'+resp.id).addClass('false');
        this.triggerPayments(this.calculateTotal(resp));
      },
      /**
       * Inserts a new row for payments dependig in the row
      */
      insertRow: function(resp) {
        if($('#payments_table tr.payment').length > 0) {
          $('#payments_table tr.payment:last').updateTemplateRow(template, resp);
        }else{
          $('#payments_table tr:first').updateTemplateRow(template, resp);
        }
      },
      /**
      * Triggers event to add a new pay_plan in case there is a new one
      */
      triggerPayPlan: function(pay_plan) {
        if(pay_plan) {
          pay_plan['new_record'] = true;
          $('body').trigger('pay_plan', [pay_plan]);
        }
      },
      /**
      * Creates a message about the payment
      */
      createMessage: function(resp) {
        this.messages = [];
        this.payPlansMessage(resp.updated_pay_plan_ids);
        this.newPayPlanMessage(resp.pay_plan);
        $('#payment_message').hide("slow").remove();

        if(this.messages.length > 0) {
          $('#payments h2').after('<div class="message" id="payment_message" style="display:none"><span class="close"></span><p>' + this.messages.join("</p><p>") + '</p></div>'); 
          $('#payment_message').show("slow");
        }
      },
      /**
      * Message for pay_plans
      */
      payPlansMessage: function(ids) {
        var link = '<a href="##{transaction.typed}_pay_plans" id="trigger_pay_plans">Ver</a>';
        if(ids.length > 1) {
          this.messages.push("Se ha anulado varios planes de #{transaction.pay_type} " + link );
        }else if(ids.length == 1) {
          this.messages.push("Se ha anulado 1 plan de #{transaction.pay_type} " + link);
        }else{
          this.messages.push("Se ha aÃ±adido un nuevo")
        }

        if(ids.length > 0) {
          $('#tab_pay_plans').one('click', function() {
            var cont = $(this).attr("href");
            $(cont).html(AjaxLoadingHTML())
            .load("/pay_plans/#{transaction.id}");
          });
        }
      },
      /**
      * Crete a links for the pay_plans
      */
      createPayPlanLinks: function(ids) {
        var html = [];
        $(ids).map(function(i, el) { 
          html.push('<a href="#pay_plans_table" data-id="' + el + '" class="pay_plan_link">plan de pago ' + el + '</a>');
        });
        return html.join(", ");
      },
      /**
      * Creates a pay_plan message if one was created
      */
      newPayPlanMessage: function(pay_plan) {
        if(pay_plan) {
          this.messages.push( "Se ha creado un <a href='#pay_plans_table' class='pay_plan_link' data-id='" + pay_plan.id + "'>nuevo plan de pago</a>");
        }
      },
      /**
      * Hides the payPlans links for edit and destroy that payment changed state and setsa new state
      * @param Array ids
      */
      updatePayPlans: function(ids) {
        $(ids).each(function(i, el) {
          $tr = $('#pay_plans_table').find("tr#" + el)
          $tr.find("a.edit, a.delete, a.email").hide();
          $tr.find('td.state').html('Pagado').removeClass("red").addClass("dark_green");
        });
      },
      /**
      * Calculates the total amount and triggers an event to update the balance in other sheets
      * @param Object resp // JSON Response from AJAX Request
      */
      calculateTotal: function(resp) {
        var amount = 0, total_amount = 0, interests_penalties = 0, conciliated_amount = 0;
        $('#payments_table tr.payment').each(function(i, el) {
          amount += $(el).find('td.amount').data('val');
          total_amount += $(el).find('td.total_amount').data('val');
          if($(el).hasClass("p_paid")) {
            conciliated_amount += $(el).find('td.total_amount').data('val');
          }
          interests_penalties += $(el).find('td.interests_penalties').data('val');
        });

        $('#payments_table #total_payment').html("#{transaction.currency_symbol} " + _b.ntc(total_amount));

        return {
          'amount'              : amount,
          'total_amount'        : total_amount,
          'conciliated_amount'  : conciliated_amount,
          'interests_penalties' : interests_penalties,
          'transaction_balance' : resp.transaction_balance
        };
      },
      /**
      * Triggers the event for calculation
      */
      triggerPayments: function(payments) {
        $('body').trigger('payments', [payments]);
      }
    };

    /* Test data for pay_plan_class
    var test_pay_plan = {"alert_date":"2011-02-08","amount":165.0,"created_at":"2011-02-08T12:58:10Z","ctype":"Income","currency_id":1,"description":null,"email":null,"id":41,"interests_penalties":0.0,"organisation_id":1,"paid":false,"payment_date":"2011-02-08","transaction_id":6,"updated_at":"2011-02-08T12:58:10Z", new_record: true};
    var test = {"account_id":1,"active":true,"amount":50.0,"created_at":"2011-02-08T12:51:27Z","ctype":null,"currency_id":1,"date":"2011-02-08","description":null,"id":11,"interests_penalties":0.0,"organisation_id":1,"transaction_id":3,"updated_at":"2011-02-08T12:51:27Z","updated_pay_plan_ids":[37, 38],"account":"Banco Nacional de Bolivia 5464654654","total_amount":50.0, new_record: true, account_ledger_id: 0, "currency_symbol": "$"};
    */

    window.Payment = Payment;

    $('#trigger_pay_plans').live('click', function() { $('#tab_pay_plans').trigger("click"); })
    /**
    * Method of payment
    */
    $('body').live('payment', function(e, resp) {
      //$('body').trigger('transaction', '');
      Payment.create(resp);
    }).live('transaction', function(e, value) {
      if(value == 'paid') {
        $('#new_payment_link').remove();
        $('#payments_table a.null_payment').remove();
      }else if($('#new_payment_link').length <= 0){
        var html = '<a title="Nuevo #{transaction.pay_type}" id="new_payment_link" data-width="700" data-trigger="payment" class="new ajax" href="/payments/new?id=1&amp;payment_type=#{transaction.pay_type}&amp;type=Income">Nuevo #{transaction.pay_type}</a>';
        $('#payments h2:first').after(html);
      }
    });
  })
